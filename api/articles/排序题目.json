{"title":"排序题目","uid":"137114166de934a4dd5b894c333fbc29","slug":"排序题目","date":"2022-10-30T13:21:16.000Z","updated":"2022-10-30T17:01:20.711Z","comments":true,"path":"api/articles/排序题目.json","keywords":null,"cover":"https://soj.csgrandeur.cn/static/image/global/badge.png","content":"<h2 id=\"Description-1\"><a href=\"#Description-1\" class=\"headerlink\" title=\"Description 1\"></a>Description 1</h2><p>冒泡排序是一种常见的排序算法，本题要求用冒泡排序算法对一组正整数进行从小到大排序.</p>\n<p>从小到大输出排序好的数，数之间用空格分开，行尾没有多余的空格.</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>多组测试数据，每组数据第一行为 <code>n</code> 表示有<code>n</code> 个数。第二行为<code>n</code>个空格隔开的<code>500</code>内的正整数.</p>\n<p>1 ≤ <em>n</em> ≤ 100.</p>\n<h2 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>从小到大输出这些正整数，空格隔开，行末没有多余的空格</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">5\n6 7 2 4 3\n4\n9 2 4 1</code></pre>\n\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">2 3 4 6 7\n1 2 4 9</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;cstdio&gt;\n#include&lt;cstdlib&gt;\n#include&lt;cstring&gt;\nint a[110], n;\nvoid Swap(int &amp;a, int &amp;b) &#x2F;&#x2F;把真实地址传进去\n&#123;\n    int tmp &#x3D; a;\n    a &#x3D; b;\n    b &#x3D; tmp;\n&#125;\nint main()\n&#123;\n    for(n &#x3D; 0; scanf(&quot;%d&quot;, &amp;a[n]) !&#x3D; EOF; n ++);\n    for(int i &#x3D; n - 1; i &gt;&#x3D; 0; i --)\n        for(int j &#x3D; 0; j &lt; i; j ++)\n            if(a[j] &gt; a[j + 1]) Swap(a[j], a[j + 1]);\n    for(int i &#x3D; 0; i &lt; n; i ++)\n        printf(&quot; %d&quot; + !i, a[i]);\n    printf(&quot;\\n&quot;);\n    return 0;\n&#125;</code></pre>\n\n<h2 id=\"Description-2\"><a href=\"#Description-2\" class=\"headerlink\" title=\"Description 2\"></a>Description 2</h2><p>一个都不大于500的非负整数序列，取出其中的奇数进行排序输出。</p>\n<h2 id=\"Input-1\"><a href=\"#Input-1\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>多组测试数据，每组数据第一行为 <code>n</code> 表示有<code>n</code> 个数. 第二行为<code>n</code>个空格隔开的<code>int</code>范围内的正整数.</p>\n<p>1 ≤ <em>n</em> ≤ 100.</p>\n<h2 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output\"></a>Output</h2><p>从小到大输出提供数据的奇数，空格隔开，行末没有多余的空格.</p>\n<h2 id=\"Sample-Input-1\"><a href=\"#Sample-Input-1\" class=\"headerlink\" title=\"Sample Input\"></a>Sample Input</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">5\n6 7 2 4 3\n4\n9 2 4 1</code></pre>\n\n<h2 id=\"Sample-Output-1\"><a href=\"#Sample-Output-1\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">3 7\n1 9</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;cstdio&gt;\n#include&lt;cstdlib&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nint a[1110], n, m, x;\nint main()\n&#123;\n    while(scanf(&quot;%d&quot;, &amp;n) !&#x3D; EOF)\n    &#123;\n        for(m &#x3D; 0; n --;)\n        &#123;\n            scanf(&quot;%d&quot;, &amp;x);\n            if(x &amp; 1) a[m ++] &#x3D; x;\n        &#125;\n        std::sort(a, a + m);\n        for(int i &#x3D; 0; i &lt; m; i ++)\n            printf(&quot;,%d&quot; + !i, a[i]); &#x2F;&#x2F;字符串就是一个首地址，加一的话就是第二个字符的地址，逗号就没了\n        printf(&quot;\\n&quot;);\n    &#125;\n    return 0;\n&#125;</code></pre>\n\n","feature":true,"text":"Description 1冒泡排序是一种常见的排序算法，本题要求用冒泡排序算法对一组正整数进行从小到大排序. 从小到大输出排序好的数，数之间用空格分开，行尾没有多余的空格. Input多组测试数据，每组数据第一行为 n 表示有n 个数。第二行为n个空格隔开的500内的正整数. 1...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"ACM新手课堂练习","slug":"ACM新手课堂练习","count":2,"path":"api/tags/ACM新手课堂练习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Description-1\"><span class=\"toc-text\">Description 1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Input\"><span class=\"toc-text\">Input</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Output\"><span class=\"toc-text\">Output</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sample-Input\"><span class=\"toc-text\">Sample Input</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sample-Output\"><span class=\"toc-text\">Sample Output</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Description-2\"><span class=\"toc-text\">Description 2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Input-1\"><span class=\"toc-text\">Input</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Output-1\"><span class=\"toc-text\">Output</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sample-Input-1\"><span class=\"toc-text\">Sample Input</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Sample-Output-1\"><span class=\"toc-text\">Sample Output</span></a></li></ol>","author":{"name":"Shockley","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/10/27/xhKxMQ.jpg","link":"/","description":"菜鸟一枚","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"uart学习","uid":"f4b64ea2c88bb417cb737aa4fba9997c","slug":"uart学习","date":"2022-10-28T07:49:26.000Z","updated":"2022-10-29T03:29:17.047Z","comments":true,"path":"api/articles/uart学习.json","keywords":null,"cover":"https://rm-static.djicdn.com/robomasters/dps/0e5aa183673ec1058912fc5caed4d82b.jpg","text":"串口简介（Universal Synchronous&#x2F;Asynchronous Receiver&#x2F;Transmitter） 通用异步收发传输器（没有时钟线），相对地，有时钟线就是同步通信 具有TX和RX两根线 可以将数据串行地发送给对方 串口数据按照位依次发送...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"嵌入式学习","slug":"嵌入式学习","count":1,"path":"api/tags/嵌入式学习.json"}],"author":{"name":"Shockley","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/10/27/xhKxMQ.jpg","link":"/","description":"菜鸟一枚","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}